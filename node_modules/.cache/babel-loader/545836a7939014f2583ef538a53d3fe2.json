{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react\\\\react-yu-baek-portfolio\\\\src\\\\pages\\\\portfolio\\\\Portfolio.js\";\nimport React, { Component } from \"react\";\nimport profileImg from \"../../images/profile_sh.jpg\";\nimport Pagination from \"components/Pagination\";\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnClick = num => {\n      const {\n        portfolioArr\n      } = this.state;\n      let _portfolioArr = portfolioArr;\n\n      if (num === 0) {\n        _portfolioArr = _portfolioArr;\n      } else if (num === 1) {\n        _portfolioArr = _portfolioArr.filter(portfolio => portfolio.filterVal === \"a\");\n      } else if (num === 2) {\n        _portfolioArr = _portfolioArr.filter(portfolio => portfolio.filterVal === \"b\");\n      } else if (num === 3) {\n        _portfolioArr = _portfolioArr.filter(portfolio => portfolio.filterVal === \"c\");\n      }\n\n      console.log(\"현재 나오는 arr= \", _portfolioArr);\n      this.setState({\n        showPortfolioArr: _portfolioArr,\n        totalCount: _portfolioArr.length\n      }, () => {\n        this.handleOnPageChange;\n      });\n    };\n\n    this.handleOnPageChange = pageNumber => {\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n\n    this.state = {\n      portfolioArr: [{\n        idx: 1,\n        image: profileImg,\n        filterVal: \"a\",\n        title: \"test1\",\n        contents: \"test1번의 포트폴리오\"\n      }, {\n        idx: 2,\n        image: profileImg,\n        filterVal: \"a\",\n        title: \"test2\",\n        contents: \"test2번의 포트폴리오\"\n      }, {\n        idx: 3,\n        image: profileImg,\n        filterVal: \"b\",\n        title: \"test3\",\n        contents: \"test3번의 포트폴리오\"\n      }, {\n        idx: 4,\n        image: profileImg,\n        filterVal: \"c\",\n        title: \"test4\",\n        contents: \"test4번의 포트폴리오\"\n      }, {\n        idx: 5,\n        image: profileImg,\n        filterVal: \"c\",\n        title: \"test5\",\n        contents: \"test5번의 포트폴리오\"\n      }, {\n        idx: 6,\n        image: profileImg,\n        filterVal: \"c\",\n        title: \"test6\",\n        contents: \"test6번의 포트폴리오\"\n      }, {\n        idx: 7,\n        image: profileImg,\n        filterVal: \"a\",\n        title: \"test7\",\n        contents: \"test1번의 포트폴리오\"\n      }, {\n        idx: 8,\n        image: profileImg,\n        filterVal: \"a\",\n        title: \"test8\",\n        contents: \"test2번의 포트폴리오\"\n      }, {\n        idx: 9,\n        image: profileImg,\n        filterVal: \"b\",\n        title: \"test9\",\n        contents: \"test3번의 포트폴리오\"\n      }, {\n        idx: 10,\n        image: profileImg,\n        filterVal: \"c\",\n        title: \"test10\",\n        contents: \"test4번의 포트폴리오\"\n      }, {\n        idx: 11,\n        image: profileImg,\n        filterVal: \"c\",\n        title: \"test11\",\n        contents: \"test5번의 포트폴리오\"\n      }],\n      //포트폴리오 전체 json\n      showPortfolioArr: [],\n      //한페이지에 보여줘야 할 json\n      totalCount: 0,\n      //이벤트 영상 전체 갯수\n      activePage: 1,\n      //active 된 페이지\n      rowCount: 6 //화면에 보여줄 갯수\n\n    };\n  }\n\n  componentDidMount() {\n    const {\n      portfolioArr,\n      rowCount\n    } = this.state;\n\n    let _portfolioArr = portfolioArr.slice(0, rowCount);\n\n    this.setState({\n      showPortfolioArr: _portfolioArr,\n      totalCount: portfolioArr.length\n    });\n  } //여기서 페이지 눌렀을때 json 값 변경\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      portfolioArr\n    } = this.state;\n    const {\n      rowCount,\n      activePage\n    } = this.state;\n    let offset = rowCount * activePage - rowCount;\n\n    if (prevState.activePage !== activePage) {\n      let _portfolioArr = portfolioArr.slice(offset, offset + rowCount);\n\n      this.setState({\n        showPortfolioArr: _portfolioArr\n      });\n    }\n  } //필터 눌렀을때 처리되는 메소드\n\n\n  render() {\n    const {\n      showPortfolioArr\n    } = this.state;\n    const {\n      totalCount,\n      rowCount,\n      activePage\n    } = this.state;\n    let filterList = [\"전체\", \"aaaaaa\", \"bbbbbb\", \"cccccc\"];\n    let filterComp = filterList.map((filter, idx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => {\n          this.handleOnClick(idx);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, filter);\n    });\n    let portfolioComp = (showPortfolioArr || []).map((portfolio, idx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, portfolio.title), /*#__PURE__*/React.createElement(\"img\", {\n        src: profileImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolio-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, filterComp), /*#__PURE__*/React.createElement(Pagination, {\n      onPageChange: this.handleOnPageChange,\n      total: totalCount,\n      rowCount: rowCount,\n      currentPage: activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolio-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, portfolioComp));\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["D:/workspace/react/react-yu-baek-portfolio/src/pages/portfolio/Portfolio.js"],"names":["React","Component","profileImg","Pagination","Portfolio","constructor","props","handleOnClick","num","portfolioArr","state","_portfolioArr","filter","portfolio","filterVal","console","log","setState","showPortfolioArr","totalCount","length","handleOnPageChange","pageNumber","activePage","idx","image","title","contents","rowCount","componentDidMount","slice","componentDidUpdate","prevProps","prevState","offset","render","filterList","filterComp","map","portfolioComp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport profileImg from \"../../images/profile_sh.jpg\";\r\nimport Pagination from \"components/Pagination\";\r\n\r\nclass Portfolio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      portfolioArr: [\r\n        {\r\n          idx: 1,\r\n          image: profileImg,\r\n          filterVal: \"a\",\r\n          title: \"test1\",\r\n          contents: \"test1번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 2,\r\n          image: profileImg,\r\n          filterVal: \"a\",\r\n          title: \"test2\",\r\n          contents: \"test2번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 3,\r\n          image: profileImg,\r\n          filterVal: \"b\",\r\n          title: \"test3\",\r\n          contents: \"test3번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 4,\r\n          image: profileImg,\r\n          filterVal: \"c\",\r\n          title: \"test4\",\r\n          contents: \"test4번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 5,\r\n          image: profileImg,\r\n          filterVal: \"c\",\r\n          title: \"test5\",\r\n          contents: \"test5번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 6,\r\n          image: profileImg,\r\n          filterVal: \"c\",\r\n          title: \"test6\",\r\n          contents: \"test6번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 7,\r\n          image: profileImg,\r\n          filterVal: \"a\",\r\n          title: \"test7\",\r\n          contents: \"test1번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 8,\r\n          image: profileImg,\r\n          filterVal: \"a\",\r\n          title: \"test8\",\r\n          contents: \"test2번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 9,\r\n          image: profileImg,\r\n          filterVal: \"b\",\r\n          title: \"test9\",\r\n          contents: \"test3번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 10,\r\n          image: profileImg,\r\n          filterVal: \"c\",\r\n          title: \"test10\",\r\n          contents: \"test4번의 포트폴리오\",\r\n        },\r\n        {\r\n          idx: 11,\r\n          image: profileImg,\r\n          filterVal: \"c\",\r\n          title: \"test11\",\r\n          contents: \"test5번의 포트폴리오\",\r\n        },\r\n      ], //포트폴리오 전체 json\r\n      showPortfolioArr: [], //한페이지에 보여줘야 할 json\r\n      totalCount: 0, //이벤트 영상 전체 갯수\r\n      activePage: 1, //active 된 페이지\r\n      rowCount: 6, //화면에 보여줄 갯수\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { portfolioArr, rowCount } = this.state;\r\n    let _portfolioArr = portfolioArr.slice(0, rowCount);\r\n\r\n    this.setState({\r\n      showPortfolioArr: _portfolioArr,\r\n      totalCount: portfolioArr.length,\r\n    });\r\n  }\r\n\r\n  //여기서 페이지 눌렀을때 json 값 변경\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { portfolioArr } = this.state;\r\n    const { rowCount, activePage } = this.state;\r\n    let offset = rowCount * activePage - rowCount;\r\n\r\n    if (prevState.activePage !== activePage) {\r\n      let _portfolioArr = portfolioArr.slice(offset, offset + rowCount);\r\n      this.setState({ showPortfolioArr: _portfolioArr });\r\n    }\r\n  }\r\n\r\n  //필터 눌렀을때 처리되는 메소드\r\n  handleOnClick = (num) => {\r\n    const { portfolioArr } = this.state;\r\n    let _portfolioArr = portfolioArr;\r\n\r\n    if (num === 0) {\r\n      _portfolioArr = _portfolioArr;\r\n    } else if (num === 1) {\r\n      _portfolioArr = _portfolioArr.filter(\r\n        (portfolio) => portfolio.filterVal === \"a\"\r\n      );\r\n    } else if (num === 2) {\r\n      _portfolioArr = _portfolioArr.filter(\r\n        (portfolio) => portfolio.filterVal === \"b\"\r\n      );\r\n    } else if (num === 3) {\r\n      _portfolioArr = _portfolioArr.filter(\r\n        (portfolio) => portfolio.filterVal === \"c\"\r\n      );\r\n    }\r\n\r\n    console.log(\"현재 나오는 arr= \", _portfolioArr);\r\n\r\n    this.setState(\r\n      {\r\n        showPortfolioArr: _portfolioArr,\r\n        totalCount: _portfolioArr.length,\r\n      },\r\n      () => {\r\n        this.handleOnPageChange;\r\n      }\r\n    );\r\n  };\r\n\r\n  //페이지 변경될때 호출되는 메소드\r\n  handleOnPageChange = (pageNumber) => {\r\n    this.setState({\r\n      activePage: pageNumber,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showPortfolioArr } = this.state;\r\n    const { totalCount, rowCount, activePage } = this.state;\r\n\r\n    let filterList = [\"전체\", \"aaaaaa\", \"bbbbbb\", \"cccccc\"];\r\n    let filterComp = filterList.map((filter, idx) => {\r\n      return (\r\n        <div\r\n          onClick={() => {\r\n            this.handleOnClick(idx);\r\n          }}\r\n        >\r\n          {filter}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let portfolioComp = (showPortfolioArr || []).map((portfolio, idx) => {\r\n      return (\r\n        <div className=\"screen\">\r\n          <span />\r\n          <span />\r\n          <span />\r\n          <span />\r\n          <div>{portfolio.title}</div>\r\n          <img src={profileImg} />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"portfolio-container\">\r\n        <div className=\"filter-container\">{filterComp}</div>\r\n        <Pagination\r\n          onPageChange={this.handleOnPageChange}\r\n          total={totalCount}\r\n          rowCount={rowCount}\r\n          currentPage={activePage}\r\n        />\r\n        <div className=\"portfolio-list\">{portfolioComp}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n"]},"metadata":{},"sourceType":"module"}