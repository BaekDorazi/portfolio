{"ast":null,"code":"/*\nCopyright (c) Daybrush\nname: @scenejs/effects\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/scenejs-effects.git\nversion: 1.0.1\n*/\nimport { SceneItem, Frame } from 'scenejs';\nimport { isArray, splitUnit } from '@daybrush/utils';\nimport { getKeyframes } from 'keyframer';\n/**\n * @namespace effects\n */\n\n/**\n * Use the property to create an effect.\n * @memberof effects\n * @private\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"@scenejs/effects\";\n// Scene.set(\"opacity\", [0, 1, 0], {duration: 2});\nset(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\n// Scene.blink({duration: 2});\nblink({ duration: 2});\n\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 0,\n    },\n    \"50%\": {\n        opacity: 1,\n    }\n    \"100%\": {\n        opacity: 0,\n    }\n}, {\n    duration: 2,\n});\n */\n\nfunction set(property, values, options) {\n  var item = new SceneItem({}, options);\n  var length = values.length;\n\n  for (var i = 0; i < length; ++i) {\n    item.set(i / (length - 1) * 100 + \"%\", property, values[i]);\n  }\n\n  return item;\n}\n/**\n * Make a zoom in effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomIn } from \"@scenejs/effects\";\n\n// Scene.zoomIn({duration: 2});\nzoomIn({duration: 2});\n\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"transform\": \"scale(0)\",\n    },\n    \"100%\": {\n        \"transform\": \"scale(1)\",\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction zoomIn(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _b.to,\n      to = _d === void 0 ? 1 : _d;\n\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n/**\n * Make a zoom out effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomOut } from \"@scenejs/effects\";\n// Scene.zoomOut({ duration: 2 });\nzoomOut({ duration: 2 });\n\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"transform\": \"scale(1)\",\n    },\n    \"100%\": {\n        \"transform\": \"scale(0)\",\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction zoomOut(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? 1 : _c,\n      _d = _b.to,\n      to = _d === void 0 ? 0 : _d;\n\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n/**\n * Make a wipe in effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeIn } from \"@scenejs/effects\";\n\n// Scene.wipeIn({ property: \"left\", duration: 2 });\nwipeIn({ property: \"left\", duration: 2 });\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"left\": \"-100%\",\n    },\n    \"100%\": {\n        \"left\": \"0%\",\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction wipeIn(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? \"-100%\" : _c,\n      _d = _b.to,\n      to = _d === void 0 ? \"0%\" : _d,\n      _e = _b.property,\n      property = _e === void 0 ? \"left\" : _e;\n\n  return set(property, [from, to], arguments[0]);\n}\n/**\n * Make a wipe out effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeOut } from \"@scenejs/effects\";\n// Scene.wipeOut({property: \"left\", duration: 2});\nwipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"left\": \"0%\",\n    },\n    \"100%\": {\n        \"left\": \"100%\",\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction wipeOut(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? \"0%\" : _c,\n      _d = _b.to,\n      to = _d === void 0 ? \"100%\" : _d,\n      _e = _b.property,\n      property = _e === void 0 ? \"left\" : _e;\n\n  return set(property, [from, to], arguments[0]);\n}\n/**\n * Switch the scene from `item1` to `item2`.\n * @memberof effects\n * @param - Item that end effect\n * @param - Item that start effect\n * @param -  `transitionItem` or `transitionObject` to switch from `item1` to `item2`\n * @example\nimport Scene from \"scenejs\";\nimport {transition, zoomIn, fadeOut} from \"@scenejs/effects\";\n\nvar transitionScene = new Scene({\n  \"[data-transition] .target\": {},\n  \"[data-transition] .target2\": {},\n}, {\n  delay: 0.1,\n  easing: \"ease-in-out\",\n  selector: true,\n});\nScene.transition(\n  transitionScene.getItem(\"[data-transition] .target\"),\n  transitionScene.getItem(\"[data-transition] .target2\"),\n  {\n    0:  [\n      fadeOut({ duration: 1 }),\n      zoomIn({ from: 1, to: 2, duration: 1 }),\n      \"opacity: 1; transform: rotate(0deg)\",\n    ],\n    1: \"opacity: 0; transform: rotate(40deg)\",\n  }\n);\ntransitionScene.play();\n */\n\n\nfunction transition(item1, item2, transitionObject) {\n  var _a;\n\n  var transitionItem = new SceneItem();\n  transitionItem.append(transitionObject);\n  var duration = transitionItem.getDuration();\n  var transitionTime = Math.max(item1.getDuration() - duration, 0);\n  item1.set((_a = {}, _a[transitionTime] = transitionItem, _a));\n  transitionItem.setDirection(\"reverse\");\n  item2.set({\n    0: transitionItem\n  });\n}\n/**\n * Make a fade in effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeIn } from \"@scenejs/effects\";\n// Scene.fadeIn({duration: 2});\nfadeIn({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 0,\n    },\n    \"100%\": {\n        opacity: 1,\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction fadeIn(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _b.to,\n      to = _d === void 0 ? 1 : _d;\n\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a fade out effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeOut } from \"@scenejs/effects\";\n// Scene.fadeOut({duration: 2});\nfadeOut({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 1,\n    },\n    \"100%\": {\n        opacity: 0,\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction fadeOut(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? 1 : _c,\n      _d = _b.to,\n      to = _d === void 0 ? 0 : _d;\n\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport {blink} from \"@scenejs/effects\";\n// Scene.blink({duration: 2});\nblink({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 0,\n    },\n    \"50%\": {\n        opacity: 1,\n    },\n    \"100%\": {\n        opacity: 0,\n    }\n}, {\n    duration: 2,\n});\n */\n\n\nfunction blink(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _b.to,\n      to = _d === void 0 ? 1 : _d;\n\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n/**\n * You can create a flip effect horizontally, vertically, or diagonally.\n * @memberof effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount to be moved by the x-axis.\n * @param {number} [options.y=1] - Indicates the direction and amount to be moved by the y-axis.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 1, backside: false })\nflip()\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target\")\n  .play();\nflip({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target2\")\n  .play();\n */\n\n\nfunction flip(_a) {\n  var _b;\n\n  var _c = _a === void 0 ? {} : _a,\n      _d = _c.x,\n      x = _d === void 0 ? 1 : _d,\n      _e = _c.y,\n      y = _e === void 0 ? 1 : _e,\n      _f = _c.backside,\n      backside = _f === void 0 ? false : _f;\n\n  var item = new SceneItem({}, arguments[0]);\n  var property = \"\";\n  var startValue = \"\";\n  var endValue = \"\";\n  var ratio = x && y || x ? x : y;\n  var startDeg = backside ? ratio > 0 ? 180 : -180 : 0;\n  var endDeg = startDeg + ratio * 180;\n\n  if (x && y) {\n    var axis = [x > 0 ? 1 : -1, y > 0 ? 1 : -1, 0, \"\"].join(\",\");\n    property = \"rotate3d\";\n    startValue = axis + startDeg + \"deg\";\n    endValue = axis + endDeg + \"deg\";\n  } else {\n    if (x) {\n      property = \"rotateX\";\n    } else if (y) {\n      property = \"rotateY\";\n    } else {\n      return item;\n    }\n\n    startValue = startDeg + \"deg\";\n    endValue = endDeg + \"deg\";\n  }\n\n  item.set({\n    transform: (_b = {}, _b[property] = [startValue, endValue], _b)\n  });\n  return item;\n}\n/**\n * You can create an effect that flips vertically around the x-axis.\n * @memberof effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipX } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 0, backside: false })\n// flipX({ x: 1, backside: false })\nflipX()\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target\")\n  .play();\nflipX({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target2\")\n  .play();\n */\n\n\nfunction flipX(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.x,\n      x = _c === void 0 ? 1 : _c,\n      _d = _b.backside,\n      backside = _d === void 0 ? false : _d;\n\n  var item = flip({\n    y: 0,\n    x: x,\n    backside: backside\n  });\n  item.setOptions(arguments[0]);\n  return item;\n}\n/**\n * You can create an effect that flips horizontally around the y-axis.\n * @memberof effects\n * @param options\n * @param {number} [options.y=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipY } from \"@scenejs/effects\";\n\n// flip({ x: 0, y: 1, backside: false })\n// flipY({ y: 1, backside: false })\nflipY()\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target\")\n  .play();\nflipY({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target2\")\n  .play();\n */\n\n\nfunction flipY(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.y,\n      y = _c === void 0 ? 1 : _c,\n      _d = _b.backside,\n      backside = _d === void 0 ? false : _d;\n\n  var item = flip({\n    x: 0,\n    y: y,\n    backside: backside\n  });\n  item.setOptions(arguments[0]);\n  return item;\n}\n/**\n * Make a shake effect.\n * @memberof effects\n * @param options\n * @param {object|string} [options.properties=\"transform: translateX(5px) translateY (5px) rotate(5deg)\"] - The range of properties to be moved.\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake } from \"@scenejs/effects\";\n\nshake()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n        translateY: [\"-5px\", \"5px\"],\n        rotate: \"5deg\",\n        // set range\n        scale: [0.8, 1],\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target2\")\n  .play();\n */\n\n\nfunction shake(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.properties,\n      properties = _c === void 0 ? {\n    transform: {\n      translateX: [\"-10px\", \"10px\"],\n      translateY: [\"-10px\", \"10px\"],\n      rotate: [\"-10deg\", \"10deg\"]\n    }\n  } : _c,\n      _d = _b.frequency,\n      frequency = _d === void 0 ? 10 : _d;\n\n  var item = new SceneItem({}, arguments[0]);\n  var frame = new Frame(properties);\n  var names = frame.getNames();\n  names.forEach(function (propertyNames, i) {\n    var value = frame.get.apply(frame, propertyNames);\n    var start = 0;\n    var end = 0;\n    var unit = \"\";\n\n    if (isArray(value)) {\n      var _a = splitUnit(value[0]),\n          startNumber = _a.value,\n          startUnit = _a.unit;\n\n      unit = startUnit;\n      start = startNumber;\n      end = splitUnit(value[1]).value;\n    } else {\n      var _b = splitUnit(value),\n          valueNumber = _b.value,\n          valueUnit = _b.unit;\n\n      unit = valueUnit;\n      end = Math.abs(valueNumber);\n      start = -end;\n    }\n\n    item.set.apply(item, [\"0%\"].concat(propertyNames, [\"\" + (start + end) / 2 + unit]));\n    item.set.apply(item, [\"100%\"].concat(propertyNames, [\"\" + (start + end) / 2 + unit]));\n\n    for (var j = 1; j <= frequency; ++j) {\n      var ratio = Math.random() * (end - start) + start;\n      item.set.apply(item, [j / (frequency + 1) * 100 + \"%\"].concat(propertyNames, [\"\" + ratio + unit]));\n    }\n  });\n  return item;\n}\n/**\n * Make a horizontal shake effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.x=[\"-5px\", \"5px\"]] - range of x's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeX } from \"@scenejs/effects\";\n\n// shakeX({ x: [\"-5px\", \"5px\"], frequency: 10 })\nshakeX()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target2\")\n  .play();\n */\n\n\nfunction shakeX(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.x,\n      x = _c === void 0 ? [\"-5px\", \"5px\"] : _c,\n      _d = _b.frequency,\n      frequency = _d === void 0 ? 10 : _d;\n\n  var item = shake({\n    properties: {\n      transform: {\n        translateX: x\n      }\n    },\n    frequency: frequency\n  });\n  item.setOptions(arguments[0]);\n  return item;\n}\n/**\n * Make a vertical shake effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.y=[\"-5px\", \"5px\"]] - range of y's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeY } from \"@scenejs/effects\";\n\n// shakeY({ y: [\"-5px\", \"5px\"], frequency: 10 })\nshakeY()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateY: [\"-5px\", \"5px\"]\n        translateY: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target2\")\n  .play();\n */\n\n\nfunction shakeY(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.y,\n      y = _c === void 0 ? [\"-5px\", \"5px\"] : _c,\n      _d = _b.frequency,\n      frequency = _d === void 0 ? 10 : _d;\n\n  var item = shake({\n    properties: {\n      transform: {\n        translateY: y\n      }\n    },\n    frequency: frequency\n  });\n  item.setOptions(arguments[0]);\n  return item;\n}\n/**\n * Make the CSS Keyframes Playable Animator(SceneItem).\n * @see {@link https://github.com/daybrush/keyframer}\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @param - SceneItem's options\n * @memberof effects\n * @example\n`@keyframes keyframes {\n    0%, 7.69% {\n      border-width:35px;\n      transform: translate(-50%, -50%) scale(0);\n    }\n    84.61% {\n      border-width: 0px;\n      transform: translate(-50%, -50%) scale(1);\n    }\n    100% {\n      border-width: 0px;\n      transform: translate(-50%, -50%) scale(1);\n    }\n}`\n\nimport { keyframer } from \"@scenejs/effects\";\n\nkeyframer(\"keyframes\", {\n    duration: 1,\n    iterationCount: \"infinite\",\n    selector: \".rect\",\n}).play();\n */\n\n\nfunction keyframer(name, options) {\n  return new SceneItem(getKeyframes(name), options);\n}\n/**\n * Create a frame that moves the origin in the opposite direction as it moves through the transform.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.leftProperty=[\"transform\", \"translateX\"]] - Property name corresponding to left\n * @param {string|string[]} [options.topProperty=[\"transform\", \"translateY\"]] - Property name corresponding to top\n * @param {string|number} [options.left=\"0px\"] - Numbers to move horizontally\n * @param {string|number} [options.top=\"0px\"] - Numbers to move vertically\n * @example\nimport { SceneItem } from \"scenejs\";\nimport { kineticFrame } from \"@scenejs/effects\";\n\nnew SceneItem({\n    0: kineticFrame({ left: \"0px\", top: \"0px\" }).set({ transform: \"rotate(0deg)\"}),\n    1: kineticFrame({ left: \"50px\", top: \"0px\" }).set({ transform: \"rotate(90deg)\"}),\n    2: kineticFrame({ left: \"50px\", top: \"50px\" }).set({ transform: \"rotate(180deg)\"}),\n    3: kineticFrame({ left: \"0px\", top: \"50px\" }).set({ transform: \"rotate(270deg)\"}),\n    4: kineticFrame({ left: \"0px\", top: \"0px\" }).set({ transform: \"rotate(360deg)\"}),\n}).setSelector(\".target\").play();\n */\n\n\nfunction kineticFrame(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.leftProperty,\n      leftProperty = _c === void 0 ? [\"transform\", \"translateX\"] : _c,\n      _d = _b.topProperty,\n      topProperty = _d === void 0 ? [\"transform\", \"translateY\"] : _d,\n      _e = _b.left,\n      left = _e === void 0 ? \"0px\" : _e,\n      _f = _b.top,\n      top = _f === void 0 ? \"0px\" : _f;\n\n  var frame = new Frame();\n  frame.set.apply(frame, [].concat(leftProperty).concat([left]));\n  frame.set.apply(frame, [].concat(topProperty).concat([top]));\n  frame.set(\"transform-origin\", \"calc(50% - \" + left + \") calc(50% - \" + top + \")\");\n  return frame;\n}\n/**\n * Make a typing effect that is typed one character at a time like a typewriter.\n * The `html` property only works with javascript animations.\n * The `content` property of CSS animations works only on desktop Chrome.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property=[\"html\"]] - Property to apply the typing animation\n * @param {string} [options.text=\"\"] - Text to type\n * @param {number} [options.start=0] - Index to start typing\n * @param {number} [options.end=0] - Index to end typing\n * @param {number} [options.prefix=\"\"] - The prefix string to be attached before text\n * @param {number} [options.suffix=\"\"] - The suffix string to be attached after text\n\n * @example\nimport { typing } from \"@scenejs/effects\";\n\ntyping({ text: \"Make a typing effect with Scene.js.\"})\n  .setDuration(7)\n  .setSelector(\".target\")\n  .play();\n */\n\n\nfunction typing(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.property,\n      property = _c === void 0 ? [\"html\"] : _c,\n      _d = _b.text,\n      text = _d === void 0 ? \"\" : _d,\n      _e = _b.start,\n      start = _e === void 0 ? 0 : _e,\n      _f = _b.end,\n      end = _f === void 0 ? text.length : _f,\n      _g = _b.prefix,\n      prefix = _g === void 0 ? \"\" : _g,\n      _h = _b.suffix,\n      suffix = _h === void 0 ? \"\" : _h;\n\n  var properties = [].concat(property);\n  var item = new SceneItem();\n  var length = Math.abs(end - start) + 1;\n\n  if (start < end) {\n    for (var i = start; i <= end; ++i) {\n      item.set.apply(item, [(i - start) / length * 100 + \"%\"].concat(properties, [\"\" + prefix + text.substring(start, i) + suffix]));\n    }\n  } else {\n    for (var i = end; i <= start; ++i) {\n      item.set.apply(item, [(i - end) / length * 100 + \"%\"].concat(properties, [prefix + \"text.substring(end, start + end - i)\" + suffix]));\n    }\n  }\n\n  item.setOptions(arguments[0]);\n  return item;\n}\n\nexport { blink, fadeIn, fadeOut, flip, flipX, flipY, keyframer, kineticFrame, shake, shakeX, shakeY, transition, typing, wipeIn, wipeOut, zoomIn, zoomOut };","map":{"version":3,"sources":["../src/effects.ts"],"names":["item","length","values","i","zoomIn","_b","_c","_d","set","arguments","zoomOut","wipeIn","_e","wipeOut","transition","item1","item2","transitionObject","transitionItem","duration","transitionTime","Math","_a","fadeIn","fadeOut","blink","flip","_f","property","startValue","endValue","ratio","x","startDeg","backside","endDeg","axis","y","transform","flipX","flipY","shake","frame","names","value","start","end","unit","isArray","startNumber","startUnit","splitUnit","valueNumber","valueUnit","propertyNames","j","frequency","shakeX","properties","translateX","shakeY","translateY","keyframer","name","options","getKeyframes","kineticFrame","typing","_g","_h","text","prefix"],"mappings":"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","sourcesContent":["import { SceneItem, AnimatorState, Frame, SceneItemOptions } from \"scenejs\";\nimport { IObject, isArray, splitUnit } from \"@daybrush/utils\";\nimport { EffectState, KineticType } from \"./types\";\nimport { getKeyframes } from \"keyframer\";\n\n/**\n * @namespace effects\n */\n\n/**\n * Use the property to create an effect.\n * @memberof effects\n * @private\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"@scenejs/effects\";\n// Scene.set(\"opacity\", [0, 1, 0], {duration: 2});\nset(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\n// Scene.blink({duration: 2});\nblink({ duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nfunction set(property: string | string[], values: any[], options: Partial<AnimatorState>): SceneItem {\n    const item = new SceneItem({}, options);\n    const length = values.length;\n\n    for (let i = 0; i < length; ++i) {\n        item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n    }\n    return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomIn } from \"@scenejs/effects\";\n\n// Scene.zoomIn({duration: 2});\nzoomIn({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\nimport { zoomOut } from \"@scenejs/effects\";\n// Scene.zoomOut({ duration: 2 });\nzoomOut({ duration: 2 });\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeIn } from \"@scenejs/effects\";\n\n// Scene.wipeIn({ property: \"left\", duration: 2 });\nwipeIn({ property: \"left\", duration: 2 });\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\nimport { wipeOut } from \"@scenejs/effects\";\n// Scene.wipeOut({property: \"left\", duration: 2});\nwipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: Partial<EffectState> = {}): SceneItem {\n    return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Switch the scene from `item1` to `item2`.\n * @memberof effects\n * @param - Item that end effect\n * @param - Item that start effect\n * @param -  `transitionItem` or `transitionObject` to switch from `item1` to `item2`\n * @example\nimport Scene from \"scenejs\";\nimport {transition, zoomIn, fadeOut} from \"@scenejs/effects\";\n\nvar transitionScene = new Scene({\n  \"[data-transition] .target\": {},\n  \"[data-transition] .target2\": {},\n}, {\n  delay: 0.1,\n  easing: \"ease-in-out\",\n  selector: true,\n});\nScene.transition(\n  transitionScene.getItem(\"[data-transition] .target\"),\n  transitionScene.getItem(\"[data-transition] .target2\"),\n  {\n    0:  [\n      fadeOut({ duration: 1 }),\n      zoomIn({ from: 1, to: 2, duration: 1 }),\n      \"opacity: 1; transform: rotate(0deg)\",\n    ],\n    1: \"opacity: 0; transform: rotate(40deg)\",\n  }\n);\ntransitionScene.play();\n */\nexport function transition(\n    item1: SceneItem,\n    item2: SceneItem,\n    transitionObject: SceneItem | IObject<any>,\n): void {\n    const transitionItem = new SceneItem();\n\n    transitionItem.append(transitionObject);\n\n    const duration = transitionItem.getDuration();\n    const transitionTime = Math.max(item1.getDuration() - duration, 0);\n    item1.set({\n        [transitionTime]: transitionItem,\n    });\n    transitionItem.setDirection(\"reverse\");\n    item2.set({\n        0: transitionItem,\n    });\n}\n\n/**\n * Make a fade in effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeIn } from \"@scenejs/effects\";\n// Scene.fadeIn({duration: 2});\nfadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport { fadeOut } from \"@scenejs/effects\";\n// Scene.fadeOut({duration: 2});\nfadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof effects\n * @param options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\nimport {blink} from \"@scenejs/effects\";\n// Scene.blink({duration: 2});\nblink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: Partial<EffectState> = {}): SceneItem {\n    return set(\"opacity\", [from, to, from], arguments[0]);\n}\n/**\n * You can create a flip effect horizontally, vertically, or diagonally.\n * @memberof effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount to be moved by the x-axis.\n * @param {number} [options.y=1] - Indicates the direction and amount to be moved by the y-axis.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 1, backside: false })\nflip()\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target\")\n  .play();\nflip({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flip] .target2\")\n  .play();\n */\nexport function flip({\n    x = 1,\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}) {\n    const item = new SceneItem({}, arguments[0]);\n    let property = \"\";\n    let startValue = \"\";\n    let endValue = \"\";\n    const ratio = (x && y) || x ? x : y;\n    const startDeg = (backside ? (ratio > 0 ? 180 : -180) : 0);\n    const endDeg = startDeg + ratio * 180;\n\n    if (x && y) {\n        const axis = [x > 0 ? 1 : -1, y > 0 ? 1 : -1, 0, \"\"].join(\",\");\n\n        property = \"rotate3d\";\n        startValue = axis + startDeg + \"deg\";\n        endValue = axis + endDeg + \"deg\";\n    } else {\n        if (x) {\n            property = \"rotateX\";\n        } else if (y) {\n            property = \"rotateY\";\n        } else {\n            return item;\n        }\n        startValue = startDeg + \"deg\";\n        endValue = endDeg + \"deg\";\n    }\n    item.set({\n        transform: {\n            [property]: [startValue, endValue],\n        },\n    });\n    return item;\n}\n/**\n * You can create an effect that flips vertically around the x-axis.\n * @memberof effects\n * @param options\n * @param {number} [options.x=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipX } from \"@scenejs/effects\";\n\n// flip({ x: 1, y: 0, backside: false })\n// flipX({ x: 1, backside: false })\nflipX()\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target\")\n  .play();\nflipX({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipx] .target2\")\n  .play();\n */\nexport function flipX({\n    x = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ y: 0, x, backside });\n\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * You can create an effect that flips horizontally around the y-axis.\n * @memberof effects\n * @param options\n * @param {number} [options.y=1] - Indicates the direction and amount of movement.\n * @param {boolean} [options.backside=false] - Indicates whether to start from the back.\n * @example\nimport { flip, flipY } from \"@scenejs/effects\";\n\n// flip({ x: 0, y: 1, backside: false })\n// flipY({ y: 1, backside: false })\nflipY()\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target\")\n  .play();\nflipY({ backside: true })\n  .setDuration(1)\n  .setSelector(\"[data-flipy] .target2\")\n  .play();\n */\nexport function flipY({\n    y = 1,\n    backside = false,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = flip({ x: 0, y, backside });\n\n    item.setOptions(arguments[0]);\n    return item;\n}\n\n/**\n * Make a shake effect.\n * @memberof effects\n * @param options\n * @param {object|string} [options.properties=\"transform: translateX(5px) translateY (5px) rotate(5deg)\"] - The range of properties to be moved.\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake } from \"@scenejs/effects\";\n\nshake()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n        translateY: [\"-5px\", \"5px\"],\n        rotate: \"5deg\",\n        // set range\n        scale: [0.8, 1],\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shake] .target2\")\n  .play();\n */\nexport function shake({\n    properties = {\n        transform: {\n            translateX: [`-10px`, `10px`],\n            translateY: [`-10px`, `10px`],\n            rotate: [`-10deg`, `10deg`],\n        },\n    },\n    frequency = 10,\n}: Partial<EffectState> = {}): SceneItem {\n    const item = new SceneItem({}, arguments[0]);\n    const frame = new Frame(properties);\n    const names = frame.getNames();\n\n    names.forEach((propertyNames, i) => {\n        const value = frame.get(...propertyNames);\n        let start: number = 0;\n        let end: number = 0;\n        let unit: string = \"\";\n\n        if (isArray(value)) {\n            const { value: startNumber, unit: startUnit } = splitUnit(value[0]);\n\n            unit = startUnit;\n            start = startNumber;\n            end = splitUnit(value[1]).value;\n        } else {\n            const { value: valueNumber, unit: valueUnit } = splitUnit(value);\n\n            unit = valueUnit;\n            end = Math.abs(valueNumber);\n            start = -end;\n        }\n        item.set(`0%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n        item.set(`100%`, ...propertyNames, `${(start + end) / 2}${unit}`);\n\n        for (let j = 1; j <= frequency; ++j) {\n            const ratio = Math.random() * (end - start) + start;\n            item.set(`${j / (frequency + 1) * 100}%`, ...propertyNames, `${ratio}${unit}`);\n        }\n    });\n    return item;\n}\n\n/**\n * Make a horizontal shake effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.x=[\"-5px\", \"5px\"]] - range of x's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeX } from \"@scenejs/effects\";\n\n// shakeX({ x: [\"-5px\", \"5px\"], frequency: 10 })\nshakeX()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateX: [\"-5px\", \"5px\"]\n        translateX: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakex] .target2\")\n  .play();\n */\nexport function shakeX({\n    x = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateX: x,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * Make a vertical shake effect.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.y=[\"-5px\", \"5px\"]] - range of y's movement\n * @param {number} [options.frequency=10] - frequency of shakes\n * @example\nimport { shake, shakeY } from \"@scenejs/effects\";\n\n// shakeY({ y: [\"-5px\", \"5px\"], frequency: 10 })\nshakeY()\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target\")\n  .play();\n\nshake({\n    properties: {\n      transform: {\n        // translateY: [\"-5px\", \"5px\"]\n        translateY: \"5px\",\n      },\n    },\n    frequency: 10,\n  })\n  .setDuration(0.2)\n  .setIterationCount(\"infinite\")\n  .setSelector(\"[data-shakey] .target2\")\n  .play();\n */\nexport function shakeY({\n    y = [\"-5px\", \"5px\"],\n    frequency = 10,\n}: Partial<EffectState> = {}) {\n    const item = shake({\n        properties: {\n            transform: {\n                translateY: y,\n            },\n        },\n        frequency,\n    });\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n/**\n * Make the CSS Keyframes Playable Animator(SceneItem).\n * @see {@link https://github.com/daybrush/keyframer}\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @param - SceneItem's options\n * @memberof effects\n * @example\n`@keyframes keyframes {\n    0%, 7.69% {\n      border-width:35px;\n      transform: translate(-50%, -50%) scale(0);\n    }\n    84.61% {\n      border-width: 0px;\n      transform: translate(-50%, -50%) scale(1);\n    }\n    100% {\n      border-width: 0px;\n      transform: translate(-50%, -50%) scale(1);\n    }\n}`\n\nimport { keyframer } from \"@scenejs/effects\";\n\nkeyframer(\"keyframes\", {\n    duration: 1,\n    iterationCount: \"infinite\",\n    selector: \".rect\",\n}).play();\n */\nexport function keyframer(name: string, options: Partial<SceneItemOptions>): SceneItem {\n    return new SceneItem(getKeyframes(name), options);\n}\n\n/**\n * Create a frame that moves the origin in the opposite direction as it moves through the transform.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.leftProperty=[\"transform\", \"translateX\"]] - Property name corresponding to left\n * @param {string|string[]} [options.topProperty=[\"transform\", \"translateY\"]] - Property name corresponding to top\n * @param {string|number} [options.left=\"0px\"] - Numbers to move horizontally\n * @param {string|number} [options.top=\"0px\"] - Numbers to move vertically\n * @example\nimport { SceneItem } from \"scenejs\";\nimport { kineticFrame } from \"@scenejs/effects\";\n\nnew SceneItem({\n    0: kineticFrame({ left: \"0px\", top: \"0px\" }).set({ transform: \"rotate(0deg)\"}),\n    1: kineticFrame({ left: \"50px\", top: \"0px\" }).set({ transform: \"rotate(90deg)\"}),\n    2: kineticFrame({ left: \"50px\", top: \"50px\" }).set({ transform: \"rotate(180deg)\"}),\n    3: kineticFrame({ left: \"0px\", top: \"50px\" }).set({ transform: \"rotate(270deg)\"}),\n    4: kineticFrame({ left: \"0px\", top: \"0px\" }).set({ transform: \"rotate(360deg)\"}),\n}).setSelector(\".target\").play();\n */\nexport function kineticFrame({\n    leftProperty = [\"transform\", \"translateX\"],\n    topProperty = [\"transform\", \"translateY\"],\n    left = \"0px\",\n    top = \"0px\",\n}: Partial<KineticType> = {}): Frame {\n    const frame = new Frame();\n\n    frame.set(...[].concat(leftProperty), left);\n    frame.set(...[].concat(topProperty), top);\n    frame.set(\"transform-origin\", `calc(50% - ${left}) calc(50% - ${top})`);\n\n    return frame;\n}\n\n/**\n * Make a typing effect that is typed one character at a time like a typewriter.\n * The `html` property only works with javascript animations.\n * The `content` property of CSS animations works only on desktop Chrome.\n * @memberof effects\n * @param options\n * @param {string|string[]} [options.property=[\"html\"]] - Property to apply the typing animation\n * @param {string} [options.text=\"\"] - Text to type\n * @param {number} [options.start=0] - Index to start typing\n * @param {number} [options.end=0] - Index to end typing\n * @param {number} [options.prefix=\"\"] - The prefix string to be attached before text\n * @param {number} [options.suffix=\"\"] - The suffix string to be attached after text\n\n * @example\nimport { typing } from \"@scenejs/effects\";\n\ntyping({ text: \"Make a typing effect with Scene.js.\"})\n  .setDuration(7)\n  .setSelector(\".target\")\n  .play();\n */\nexport function typing({\n    property = [\"html\"],\n    text = \"\",\n    start = 0,\n    end = text.length,\n    prefix = \"\",\n    suffix = \"\",\n}: Partial<EffectState> = {}): SceneItem {\n    const properties = [].concat(property);\n    const item = new SceneItem();\n    const length = Math.abs(end - start) + 1;\n\n    if (start < end) {\n        for (let i = start; i <= end; ++i) {\n            item.set(`${(i - start) / length * 100}%`, ...properties, `${prefix}${text.substring(start, i)}${suffix}`);\n        }\n    } else {\n        for (let i = end; i <= start; ++i) {\n            item.set(\n                `${(i - end) / length * 100}%`,\n                ...properties,\n                `${prefix}text.substring(end, start + end - i)${suffix}`,\n            );\n        }\n    }\n    item.setOptions(arguments[0]);\n\n    return item;\n}\n"]},"metadata":{},"sourceType":"module"}