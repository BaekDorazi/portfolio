{"ast":null,"code":"/*\nCopyright (c) 2019 Daybrush\nname: keyframer\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/keyframer.git\nversion: 0.1.0\n*/\nimport { isObject, toArray, splitComma } from '@daybrush/utils';\nimport { Frame } from 'scenejs';\nvar KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE;\nvar KEYFRAME_RULE = CSSRule.KEYFRAME_RULE || CSSRule.WEBKIT_KEYFRAME_RULE;\n/**\n * Make the CSS Keyframes the keyframes object.\n * @namespace Keyframer\n */\n\n/**\n* Make the CSS Keyframes the keyframes deep object.\n * @memberof Keyframer\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @returns the keyframes deep object\n * @example\n// @keyframes keyframes {\n//     0% {\n//         opacity: 1;\n//         transform: translate(0px, 0px) rotate(0deg);\n//     }\n//     50% {\n//         opacity: 0;\n//         transform: translate(50px, 0px) rotate(0deg);\n//     }\n//     100% {\n//         opacity: 1;\n//         transform: translate(100px, 0px) rotate(50deg);\n//     }\n// }\n\nimport { getKeyframesObject } from \"keyframer\";\n\nconst obj = getKeyframesObject(\"keyframes\");\n// {\n//     \"0%\": {\n//         opacity: 1,\n//         transform: { translate: \"0px,0px\", rotate: \"0deg\" },\n//     }\n//     \"50%\": {\n//         opacity: 0,\n//         transform: { translate: \"50px,0px\", rotate: \"0deg\" },\n//     },\n//     \"100%\": {\n//         opacity: 1,\n//         transform: { translate: \"100px,0px\", rotate: \"50deg\" },\n//     },\n// }\n */\n\nfunction getKeyframesObject(name) {\n  var keyframes = isObject(name) ? name : getKeyframes(name);\n  var keyframesObject = {};\n\n  for (var time in keyframes) {\n    keyframesObject[time] = new Frame(keyframes[time]).get();\n  }\n\n  return keyframesObject;\n}\n/**\n * Make the CSS Keyframes the keyframes object.\n * @memberof Keyframer\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @returns the keyframes object\n * @example\n// @keyframes keyframes {\n//     0% {\n//         opacity: 1;\n//         transform: translate(0px, 0px) rotate(0deg);\n//     }\n//     50% {\n//         opacity: 0;\n//         transform: translate(50px, 0px) rotate(0deg);\n//     }\n//     100% {\n//         opacity: 1;\n//         transform: translate(100px, 0px) rotate(50deg);\n//     }\n// }\n\nimport { getKeyframes } from \"keyframer\";\n\n// {\n//     \"0%\": \"opacity: 1; transform: translate(0px, 0px) rotate(0deg)\",\n//     \"50%\": \"opacity: 0; transform: translate(50px, 0px) rotate(0deg)\",\n//     \"100%\": \"opacity: 1; transform: translate(100px, 0px) rotate(50deg)\",\n// }\nconst obj = getKeyframes(\"keyframes\");\n */\n\n\nfunction getKeyframes(name) {\n  var styleSheets = toArray(document.styleSheets);\n  var sheets = styleSheets.filter(function (sheet) {\n    try {\n      var length = sheet.cssRules.length;\n      return length > 0;\n    } catch (e) {\n      return false;\n    }\n  });\n  var sheetsLength = sheets.length;\n\n  var _loop_1 = function (i) {\n    var sheet = sheets[i];\n    var keyframesRules = toArray(sheet.cssRules);\n    var keyframesRule = keyframesRules.filter(function (rule) {\n      return rule.name === name && rule.type === KEYFRAMES_RULE;\n    })[0];\n\n    if (keyframesRule) {\n      var keyframeRules = toArray(keyframesRule.cssRules);\n      var obj_1 = {};\n      keyframeRules.forEach(function (rule) {\n        if (rule.type === KEYFRAME_RULE) {\n          var keyText = rule.keyText;\n          var cssText_1 = rule.style.cssText;\n          splitComma(keyText).forEach(function (time) {\n            obj_1[time] = cssText_1;\n          });\n        }\n      });\n      return {\n        value: obj_1\n      };\n    }\n  };\n\n  for (var i = 0; i < sheetsLength; ++i) {\n    var state_1 = _loop_1(i);\n\n    if (typeof state_1 === \"object\") return state_1.value;\n  }\n\n  return {};\n}\n\nexport { getKeyframes, getKeyframesObject };","map":{"version":3,"sources":["../src/consts.ts","../src/Keyframer.ts"],"names":["KEYFRAMES_RULE","CSSRule","KEYFRAME_RULE","getKeyframesObject","name","keyframes","isObject","getKeyframes","keyframesObject","styleSheets","toArray","document","sheets","length","sheet","sheetsLength","i","keyframesRules","keyframesRule","rule","keyframeRules","obj_1","keyText","cssText_1","splitComma"],"mappings":";;;;;;;;;;AAAO,IAAMA,cAAc,GAAGC,OAAO,CAAPA,cAAAA,IAA2BA,OAAe,CAAjE,qBAAA;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAPA,aAAAA,IAA0BA,OAAe,CAA/D,oBAAA;ACEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAgBE,kBAAhB,CAAmCC,IAAnC,EAAmCA;MACzBC,SAAS,GAAGC,QAAQ,CAARA,IAAQ,CAARA,GAAAA,IAAAA,GAAwBC,YAAY,CAAtD,IAAsD,C;MAChDC,eAAe,GAArB,E;;OAEK,IAAL,I,IAAA,S,EAA8B;AAC1BA,IAAAA,eAAe,CAAfA,IAAe,CAAfA,GAAwB,IAAA,KAAA,CAAUH,SAAS,CAAnB,IAAmB,CAAnB,EAAxBG,GAAwB,EAAxBA;;;SAEJ,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCJ,SAAgBD,YAAhB,CAA6BH,IAA7B,EAA6BA;MACnBK,WAAW,GAAGC,OAAO,CAACC,QAAQ,CAApC,WAA2B,C;MAErBC,MAAM,GAAG,WAAW,CAAX,MAAA,CAAmB,UAAA,KAAA,EAAA;QAC1B;UACMC,MAAM,GAAGC,KAAK,CAALA,QAAAA,CAAf,M;aAEOD,MAAM,GAAb,C;AAHJ,K,CAIE,OAAA,CAAA,EAAU;aACR,K;;AANR,GAAe,C;MASTE,YAAY,GAAGH,MAAM,CAA3B,M;;0BAESI,C,EAAAA;QACCF,KAAK,GAAGF,MAAM,CAApB,CAAoB,C;QACdK,cAAc,GAAGP,OAAO,CAACI,KAAK,CAApC,QAA8B,C;QACxBI,aAAa,GAAG,cAAc,CAAd,MAAA,CAAsB,UAAA,IAAA,EAAA;aACjCC,IAAI,CAAJA,IAAAA,KAAAA,IAAAA,IAAsBA,IAAI,CAAJA,IAAAA,KAA7B,c;AADkB,KAAA,EAAtB,CAAsB,C;;QAItB,a,EAAmB;UACTC,aAAa,GAAGV,OAAO,CAACQ,aAAa,CAA3C,QAA6B,C;UACvBG,KAAG,GAAT,E;AAEAD,MAAAA,aAAa,CAAbA,OAAAA,CAAsB,UAAA,IAAA,EAAA;YACdD,IAAI,CAAJA,IAAAA,KAAJ,a,EAAiC;cACvBG,OAAO,GAAGH,IAAI,CAApB,O;cACMI,SAAO,GAAGJ,IAAI,CAAJA,KAAAA,CAAhB,O;AAEAK,UAAAA,UAAU,CAAVA,OAAU,CAAVA,CAAAA,OAAAA,CAA4B,UAAA,IAAA,EAAA;AACxBH,YAAAA,KAAG,CAAHA,IAAG,CAAHA,GAAAA,SAAAA;AADJG,WAAAA;;AALRJ,OAAAA;;eAUOC;;;;;OArBV,IAAIL,CAAC,GAAV,C,EAAgBA,CAAC,GAAjB,Y,EAAkC,EAAlC,C,EAAA;0BAASA,C;;;;;SAwBT,E","sourcesContent":["export const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || (CSSRule as any).WEBKIT_KEYFRAMES_RULE;\nexport const KEYFRAME_RULE = CSSRule.KEYFRAME_RULE || (CSSRule as any).WEBKIT_KEYFRAME_RULE;\n","import { toArray, IObject, isObject, splitComma } from \"@daybrush/utils\";\nimport { Frame } from \"scenejs\";\nimport { KEYFRAMES_RULE, KEYFRAME_RULE } from \"./consts\";\n/**\n * Make the CSS Keyframes the keyframes object.\n * @namespace Keyframer\n */\n\n/**\n* Make the CSS Keyframes the keyframes deep object.\n * @memberof Keyframer\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @returns the keyframes deep object\n * @example\n// @keyframes keyframes {\n//     0% {\n//         opacity: 1;\n//         transform: translate(0px, 0px) rotate(0deg);\n//     }\n//     50% {\n//         opacity: 0;\n//         transform: translate(50px, 0px) rotate(0deg);\n//     }\n//     100% {\n//         opacity: 1;\n//         transform: translate(100px, 0px) rotate(50deg);\n//     }\n// }\n\nimport { getKeyframesObject } from \"keyframer\";\n\nconst obj = getKeyframesObject(\"keyframes\");\n// {\n//     \"0%\": {\n//         opacity: 1,\n//         transform: { translate: \"0px,0px\", rotate: \"0deg\" },\n//     }\n//     \"50%\": {\n//         opacity: 0,\n//         transform: { translate: \"50px,0px\", rotate: \"0deg\" },\n//     },\n//     \"100%\": {\n//         opacity: 1,\n//         transform: { translate: \"100px,0px\", rotate: \"50deg\" },\n//     },\n// }\n */\nexport function getKeyframesObject(name: string | IObject<string>): IObject<any> {\n    const keyframes = isObject(name) ? name : getKeyframes(name);\n    const keyframesObject: IObject<any> = {};\n\n    for (const time in keyframes) {\n        keyframesObject[time] = new Frame(keyframes[time]).get();\n    }\n    return keyframesObject;\n}\n\n/**\n * Make the CSS Keyframes the keyframes object.\n * @memberof Keyframer\n * @param - The name of the keyframes(`CSSKeyframes​Rule`) in the stylesheet(`CSSStyleSheet`).\n * @returns the keyframes object\n * @example\n// @keyframes keyframes {\n//     0% {\n//         opacity: 1;\n//         transform: translate(0px, 0px) rotate(0deg);\n//     }\n//     50% {\n//         opacity: 0;\n//         transform: translate(50px, 0px) rotate(0deg);\n//     }\n//     100% {\n//         opacity: 1;\n//         transform: translate(100px, 0px) rotate(50deg);\n//     }\n// }\n\nimport { getKeyframes } from \"keyframer\";\n\n// {\n//     \"0%\": \"opacity: 1; transform: translate(0px, 0px) rotate(0deg)\",\n//     \"50%\": \"opacity: 0; transform: translate(50px, 0px) rotate(0deg)\",\n//     \"100%\": \"opacity: 1; transform: translate(100px, 0px) rotate(50deg)\",\n// }\nconst obj = getKeyframes(\"keyframes\");\n */\nexport function getKeyframes(name: string): IObject<string> {\n    const styleSheets = toArray(document.styleSheets) as CSSStyleSheet[];\n\n    const sheets = styleSheets.filter(sheet => {\n        try {\n            const length = sheet.cssRules.length;\n\n            return length > 0;\n        } catch (e) {\n            return false;\n        }\n    });\n    const sheetsLength = sheets.length;\n\n    for (let i = 0; i < sheetsLength; ++i) {\n        const sheet = sheets[i];\n        const keyframesRules = toArray(sheet.cssRules) as CSSKeyframesRule[];\n        const keyframesRule = keyframesRules.filter(rule => {\n            return rule.name === name && rule.type === KEYFRAMES_RULE;\n        })[0];\n\n        if (keyframesRule) {\n            const keyframeRules = toArray(keyframesRule.cssRules) as CSSKeyframeRule[];\n            const obj: IObject<string> = {};\n\n            keyframeRules.forEach(rule => {\n                if (rule.type === KEYFRAME_RULE) {\n                    const keyText = rule.keyText;\n                    const cssText = rule.style.cssText;\n\n                    splitComma(keyText).forEach(time => {\n                        obj[time] = cssText;\n                    });\n                }\n            });\n            return obj;\n        }\n    }\n    return {};\n}\n"]},"metadata":{},"sourceType":"module"}