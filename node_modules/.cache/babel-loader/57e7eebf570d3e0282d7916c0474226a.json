{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react\\\\react-yu-baek-portfolio\\\\src\\\\components\\\\SkillProgress\\\\SkillProgress.js\";\nimport React, { Component } from \"react\";\nimport { Circle, Line } from \"rc-progress\";\n\nclass SkillProgress extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increase = () => {\n      const {\n        percent\n      } = this.state;\n      const {\n        percentVal\n      } = this.props;\n      const newPercent = percent + 1; //percent 값을 1씩 증가시켜 저장해놓는 변수\n\n      if (newPercent >= percentVal + 1) {\n        clearTimeout(this.tm); //timer를 clear함\n\n        return;\n      }\n\n      this.setState({\n        percent: newPercent\n      });\n      this.tm = setTimeout(this.increase, 50); //0.05초 마다 호출\n    };\n\n    this.state = {\n      isPageFocus: false,\n      //페이지가 포커스 되었을 때 true\n      percent: 0 //progress 값\n\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      isPageFocus\n    } = this.props; //Career 페이지가 띄워지고 state의 isPageFocus 값이 false 일때\n    //Career 페이지가 띄워져을때\n\n    if (!prevState.isPageFocus && isPageFocus) {\n      this.increase();\n      this.setState({\n        isPageFocus: isPageFocus\n      });\n    } //Career에서 다른 페이지로 이동했을때 나머지 값들 초기화\n\n\n    if (prevState.isPageFocus && !isPageFocus) {\n      this.setState({\n        isPageFocus: false,\n        percent: 0\n      });\n    }\n  } //progressbar 값 증가시키는 메소드\n\n\n  render() {\n    const {\n      percent\n    } = this.state;\n    const {\n      color,\n      skillName,\n      centerSkillName\n    } = this.props;\n    const containerStyle = {\n      width: \"400px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skill-progress-container\",\n      style: containerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graph-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graph-center-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, centerSkillName), /*#__PURE__*/React.createElement(Line, {\n      percent: percent,\n      strokeWidth: \"1\",\n      strokeColor: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graph-full-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, skillName));\n  }\n\n}\n\nexport default SkillProgress;","map":{"version":3,"sources":["D:/workspace/react/react-yu-baek-portfolio/src/components/SkillProgress/SkillProgress.js"],"names":["React","Component","Circle","Line","SkillProgress","constructor","props","increase","percent","state","percentVal","newPercent","clearTimeout","tm","setState","setTimeout","isPageFocus","componentDidUpdate","prevProps","prevState","render","color","skillName","centerSkillName","containerStyle","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,aAA7B;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BnBC,QA/BmB,GA+BR,MAAM;AACf,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKJ,KAA5B;AACA,YAAMK,UAAU,GAAGH,OAAO,GAAG,CAA7B,CAHe,CAGiB;;AAEhC,UAAIG,UAAU,IAAID,UAAU,GAAG,CAA/B,EAAkC;AAChCE,QAAAA,YAAY,CAAC,KAAKC,EAAN,CAAZ,CADgC,CACT;;AACvB;AACD;;AACD,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAEG;AAAX,OAAd;AACA,WAAKE,EAAL,GAAUE,UAAU,CAAC,KAAKR,QAAN,EAAgB,EAAhB,CAApB,CAVe,CAU0B;AAC1C,KA1CkB;;AAGjB,SAAKE,KAAL,GAAa;AACXO,MAAAA,WAAW,EAAE,KADF;AACS;AACpBR,MAAAA,OAAO,EAAE,CAFE,CAEC;;AAFD,KAAb;AAID;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,UAAM;AAAEH,MAAAA;AAAF,QAAkB,KAAKV,KAA7B,CADuC,CAGvC;AACA;;AACA,QAAI,CAACa,SAAS,CAACH,WAAX,IAA0BA,WAA9B,EAA2C;AACzC,WAAKT,QAAL;AACA,WAAKO,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAEA;AADD,OAAd;AAGD,KAVsC,CAYvC;;;AACA,QAAIG,SAAS,CAACH,WAAV,IAAyB,CAACA,WAA9B,EAA2C;AACzC,WAAKF,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAE,KADD;AAEZR,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID;AACF,GA7BmC,CA+BpC;;;AAcAY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAM;AAAEY,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAAwC,KAAKjB,KAAnD;AAEA,UAAMkB,cAAc,GAAG;AACrBC,MAAAA,KAAK,EAAE;AADc,KAAvB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,KAAK,EAAED,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,eAApC,CADF,eAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAEf,OAAf;AAAwB,MAAA,WAAW,EAAC,GAApC;AAAwC,MAAA,WAAW,EAAEa,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCC,SAAlC,CALF,CADF;AASD;;AA9DmC;;AAiEtC,eAAelB,aAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Circle, Line } from \"rc-progress\";\r\n\r\nclass SkillProgress extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isPageFocus: false, //페이지가 포커스 되었을 때 true\r\n      percent: 0, //progress 값\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { isPageFocus } = this.props;\r\n\r\n    //Career 페이지가 띄워지고 state의 isPageFocus 값이 false 일때\r\n    //Career 페이지가 띄워져을때\r\n    if (!prevState.isPageFocus && isPageFocus) {\r\n      this.increase();\r\n      this.setState({\r\n        isPageFocus: isPageFocus,\r\n      });\r\n    }\r\n\r\n    //Career에서 다른 페이지로 이동했을때 나머지 값들 초기화\r\n    if (prevState.isPageFocus && !isPageFocus) {\r\n      this.setState({\r\n        isPageFocus: false,\r\n        percent: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  //progressbar 값 증가시키는 메소드\r\n  increase = () => {\r\n    const { percent } = this.state;\r\n    const { percentVal } = this.props;\r\n    const newPercent = percent + 1; //percent 값을 1씩 증가시켜 저장해놓는 변수\r\n\r\n    if (newPercent >= percentVal + 1) {\r\n      clearTimeout(this.tm); //timer를 clear함\r\n      return;\r\n    }\r\n    this.setState({ percent: newPercent });\r\n    this.tm = setTimeout(this.increase, 50); //0.05초 마다 호출\r\n  };\r\n\r\n  render() {\r\n    const { percent } = this.state;\r\n    const { color, skillName, centerSkillName } = this.props;\r\n\r\n    const containerStyle = {\r\n      width: \"400px\",\r\n    };\r\n\r\n    return (\r\n      <div className=\"skill-progress-container\" style={containerStyle}>\r\n        <div className=\"graph-container\">\r\n          <div className=\"graph-center-text\">{centerSkillName}</div>\r\n          <Line percent={percent} strokeWidth=\"1\" strokeColor={color} />\r\n        </div>\r\n        <div className=\"graph-full-text\">{skillName}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillProgress;\r\n"]},"metadata":{},"sourceType":"module"}